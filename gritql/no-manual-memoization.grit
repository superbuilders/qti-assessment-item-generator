language js // Applies to JavaScript and TypeScript

// This rule bans the use of React.useMemo, React.useCallback, and React.memo.
// These manual memoization APIs are unnecessary and potentially harmful when using React Compiler,
// as the compiler automatically optimizes memoization. See `rules/no-manual-memoization.mdc` for details.

or {
	// Case 1: React.useMemo calls
	`React.useMemo($...)` as $use_memo_call where {
		register_diagnostic(span=$use_memo_call, message="Usage of 'React.useMemo' is banned. React Compiler handles memoization automatically. Remove this call. See `rules/no-manual-memoization.mdc`.", severity="error")
	},
	// Case 2: React.useCallback calls
	`React.useCallback($...)` as $use_callback_call where {
		register_diagnostic(span=$use_callback_call, message="Usage of 'React.useCallback' is banned. React Compiler handles memoization automatically. Remove this call. See `rules/no-manual-memoization.mdc`.", severity="error")
	},
	// Case 3: React.memo calls (for component memoization)
	`React.memo($...)` as $memo_call where {
		register_diagnostic(span=$memo_call, message="Usage of 'React.memo' is banned. React Compiler applies equivalent memoization automatically to components. Remove this call. See `rules/no-manual-memoization.mdc`.", severity="error")
	}
}
